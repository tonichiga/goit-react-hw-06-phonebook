{"version":3,"sources":["Components/ButtonAddContact.module.scss","Components/VisibileContacts.module.scss","Components/InputForm.js","redux/actions.js","Components/VisibileContacts/VisibileContactsComponent.js","Components/VisibleContactsHook.js","App.js","reportWebVitals.js","redux/store.js","index.js","Components/VisibileContacts/VisibileContactsComponent.module.scss"],"names":["module","exports","InputForm","state","name","number","handleChange","e","target","value","setState","reset","hanldesubmit","preventDefault","props","onSubmit","id","Date","now","this","type","onChange","className","s","addButton","Component","connect","dispatch","contact","payload","addContact","ContactElement","deleteContact","contactElement","contactWrapper","contactName","contactButton","onClick","data","deleteContacts","useState","filter","setFilter","findContacts","console","log","placeholder","map","list","App","onGetContact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,sC,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,iC,+KCInBC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBJ,EADU,EACVA,KAAMK,EADI,EACJA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAMZE,MAAQ,WACN,EAAKD,SAAS,CACZN,KAAM,GACNC,OAAQ,M,EAIZO,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAKC,MAAMC,SAAS,CAClBX,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,OACnBW,GAAIC,KAAKC,QAEX,EAAKP,S,4CAIP,WACE,OACE,uBAAMI,SAAUI,KAAKP,aAArB,UACE,qCACA,uBACEQ,KAAK,OACLC,SAAUF,KAAKb,aACfG,MAAOU,KAAKhB,MAAMC,KAClBA,KAAK,SAGP,uCAEA,uBACEgB,KAAK,SACLC,SAAUF,KAAKb,aACfG,MAAOU,KAAKhB,MAAME,OAClBD,KAAK,WAGP,wBAAQgB,KAAK,SAASE,UAAWC,IAAEC,UAAnC,gC,GArDgBC,aAiETC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCZ,SAAU,SAAAa,GAAO,OAAID,EC9DJ,SAAAC,GACjB,MAAO,CAAER,KAAM,aAAcS,QAASD,GD6DRE,CAAWF,QAG5BF,CAAkCxB,G,wBEvDlC6B,EAbQ,SAAC,GAAyC,IAAvC3B,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAQ2B,EAAwB,EAAxBA,cAAehB,EAAS,EAATA,GACrD,OACE,qBAAIM,UAAWC,IAAEU,eAAjB,UACE,sBAAKX,UAAWC,IAAEW,eAAlB,UACE,mBAAGZ,UAAWC,IAAEY,YAAhB,SAA8B/B,IAC9B,4BAAIC,OAEN,wBAAQiB,UAAWC,IAAEa,cAAeC,QAAS,kBAAML,EAAchB,IAAjE,wB,iBCsDSU,eAZS,SAAAvB,GACtB,MAAO,CACLmC,KAAMnC,MAIiB,SAAAwB,GACzB,MAAO,CACLK,cAAe,SAAAhB,GAAE,OAAIW,EFlDF,SAAAX,GACrB,MAAO,CAAEI,KAAM,iBAAkBS,QAASb,GEiDVuB,CAAevB,QAIlCU,EAzDa,SAAC,GAA6B,IAA3BY,EAA0B,EAA1BA,KAAMN,EAAoB,EAApBA,cAAoB,EAC3BQ,mBAAS,IADkB,mBAChDC,EADgD,KACxCC,EADwC,KAcjDC,GAVJC,QAAQC,IAAI,QAASP,GACJA,EACSG,QAAO,SAAAb,GAAO,OAAIA,EAAQxB,OAASqC,MAU/D,OACE,qCACE,0CAEA,6CACA,uBACErB,KAAK,OACL0B,YAAY,aACZzB,SAdsB,SAAAd,GAC1BmC,EAAUnC,EAAEC,OAAOC,QAcfA,MAAOgC,IAGT,4BAAIE,EAAaI,KAAI,qBAAG3C,UAExB,oBAAIkB,UAAWC,IAAEyB,KAAjB,SACGV,EAAKS,KAAI,SAAAT,GAAI,OACZ,cAAC,EAAD,CACElC,KAAMkC,EAAKlC,KACXC,OAAQiC,EAAKjC,OAEb2B,cAAeA,EACfhB,GAAIsB,EAAKtB,IAFJsB,EAAKtB,eCePiC,EApDH,SAAC,GAA4B,EAA1BxC,MAA0B,EAAnByC,aA0CpB,OACE,sBAAK5B,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCtCS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCJRQ,EAAe,CACnB,CAAE5C,GAAI,OAAQZ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEW,GAAI,OAAQZ,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEW,GAAI,OAAQZ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEW,GAAI,OAAQZ,KAAM,iBAAkBC,OAAQ,cAoBjCwD,EAFDC,aAhBE,WAA8C,IAA7C3D,EAA4C,uDAApCyD,EAAoC,yCAApBxC,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QAC7C,OAAQT,GACN,IAAK,UACH,OAAOjB,EAET,IAAK,aACH,MAAM,GAAN,mBAAWA,GAAX,CAAkB0B,IAEpB,IAAK,iBACH,OAAO1B,EAAMsC,QAAO,SAAAb,GAAO,OAAIA,EAAQZ,KAAOa,KAEhD,QACE,OAAO1B,MCVbyC,QAAQC,IAAIgB,EAAME,YAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BjB,K,kBCxBAnD,EAAOC,QAAU,CAAC,eAAiB,kDAAkD,YAAc,+CAA+C,cAAgB,iDAAiD,eAAiB,qD","file":"static/js/main.a2a8a639.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"ButtonAddContact_addButton__39UQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"VisibileContacts_list__1-t-3\"};","import s from './ButtonAddContact.module.scss';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../redux/actions';\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      // [number]: value,\r\n    });\r\n  };\r\n\r\n  // Сброс инпутов\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  hanldesubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: Date.now(),\r\n    });\r\n    this.reset();\r\n    // this.props.getContact;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.hanldesubmit}>\r\n        <p>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={this.state.name}\r\n          name=\"name\"\r\n        ></input>\r\n\r\n        <p>Number</p>\r\n\r\n        <input\r\n          type=\"number\"\r\n          onChange={this.handleChange}\r\n          value={this.state.number}\r\n          name=\"number\"\r\n        ></input>\r\n\r\n        <button type=\"submit\" className={s.addButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(InputForm);\r\n","const getContacts = contact => ({\r\n  type: 'contacts',\r\n  payload: contact,\r\n});\r\n\r\nconst addContact = contact => {\r\n  return { type: 'addContact', payload: contact };\r\n};\r\n\r\nconst deleteContacts = id => {\r\n  return { type: 'deleteContacts', payload: id };\r\n};\r\n\r\nexport { addContact, getContacts, deleteContacts };\r\n","import s from './VisibileContactsComponent.module.scss';\r\n\r\nconst ContactElement = ({ name, number, deleteContact, id }) => {\r\n  return (\r\n    <li className={s.contactElement}>\r\n      <div className={s.contactWrapper}>\r\n        <p className={s.contactName}>{name}</p>\r\n        <p>{number}</p>\r\n      </div>\r\n      <button className={s.contactButton} onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default ContactElement;\r\n","import { useState } from 'react';\r\nimport ContactElement from './VisibileContacts/';\r\nimport s from './VisibileContacts.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContacts } from '../redux/actions';\r\n\r\nconst VisibleContactsHook = ({ data, deleteContact }) => {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const findContact = () => {\r\n    console.log('data:', data);\r\n    const contacts = data;\r\n    const filtered = contacts.filter(contact => contact.name === filter);\r\n    return filtered;\r\n  };\r\n\r\n  const handleContactFinder = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const findContacts = findContact();\r\n\r\n  return (\r\n    <>\r\n      <h2>Contacts</h2>\r\n\r\n      <p>Find contact</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"enter name\"\r\n        onChange={handleContactFinder}\r\n        value={filter}\r\n      ></input>\r\n\r\n      <p>{findContacts.map(({ name }) => name)}</p>\r\n\r\n      <ul className={s.list}>\r\n        {data.map(data => (\r\n          <ContactElement\r\n            name={data.name}\r\n            number={data.number}\r\n            key={data.id}\r\n            deleteContact={deleteContact}\r\n            id={data.id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteContact: id => dispatch(deleteContacts(id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(VisibleContactsHook);\r\n","import React from 'react';\nimport InputForm from './Components/InputForm';\nimport VisibleContactsHook from './Components/VisibleContactsHook';\n\nconst App = ({ value, onGetContact }) => {\n  // state = {\n  //   contacts: [],\n  // };\n\n  // const formSubmitHandler = data => {\n  //\n  //   return newContact;\n  // };\n  // const { contacts } = this.state;\n  // if (contacts.find(contact => contact.name === newContact.name)) {\n  //   return alert('такой контакт существует');\n  // }\n\n  //   this.setState(prevState => {\n  //     return { contacts: [newContact, ...prevState.contacts] };\n  //   });\n  // };\n\n  // deleteContact = contactId => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n  // componentDidMount() {\n  //   let getContacts = [];\n\n  //   getContacts = JSON.parse(localStorage.getItem('Contacts'));\n\n  //   if (getContacts === null) {\n  //     getContacts = [];\n  //   }\n\n  //   this.setState({\n  //     contacts: getContacts,\n  //   });\n  // }\n  // componentDidUpdate() {\n  //   localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\n  // }\n\n  // const data = this.state.contacts;\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n      <InputForm />\n      <VisibleContactsHook />\n    </div>\n    //  deleteContact={this.deleteContact}\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\r\n// import { addContact, getContacts } from './actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'contact':\r\n      return state;\r\n\r\n    case 'addContact':\r\n      return [...state, payload];\r\n\r\n    case 'deleteContacts':\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { myAction } from './redux/actions';\n\n// store.dispatch(myAction(10));\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactElement\":\"VisibileContactsComponent_contactElement__hcH2C\",\"contactName\":\"VisibileContactsComponent_contactName__2M975\",\"contactButton\":\"VisibileContactsComponent_contactButton__2QOB5\",\"contactWrapper\":\"VisibileContactsComponent_contactWrapper__zdpd6\"};"],"sourceRoot":""}